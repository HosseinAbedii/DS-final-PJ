apiVersion: apps/v1
kind: Deployment
metadata:
  name: spark-consumer
  labels:
    app: spark-consumer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spark-consumer
  template:
    metadata:
      labels:
        app: spark-consumer
    spec:
      containers:
      - name: spark-consumer
        image: hosseinabedi/spark-consumer:latest  # Changed to use Docker Hub image
        imagePullPolicy: IfNotPresent  # Will use local image if exists
        ports:
        - containerPort: 8765  # WebSocket port
        - containerPort: 5000  # Flask API port
        volumeMounts:
        - name: app-code
          mountPath: /app
        - name: log-volume
          mountPath: /app/logs
        env:
        - name: KAFKA_BROKER
          value: "kafka:9092"
        - name: SPARK_MASTER
          value: "spark://spark-master:7077"
        - name: REDIS_HOST
          value: "redis"
      volumes:
      - name: app-code
        hostPath:
          path: ../src
      - name: log-volume
        hostPath:
          path: ../logs
---
apiVersion: v1
kind: Service
metadata:
  name: consumer-service
spec:
  type: LoadBalancer  # Changed from NodePort to LoadBalancer
  selector:
    app: spark-consumer  # Updated to match deployment labels
  ports:
    - name: api
      port: 5000
      targetPort: 5000
      nodePort: 30500
    - name: websocket
      port: 8765
      targetPort: 8765
      nodePort: 30765
